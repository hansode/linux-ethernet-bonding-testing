# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = "centos-6.4-x86_64"
  nic_num = 3 * 2

  config.vm.provider :virtualbox do |v, override|
   # Disable the base shared folder, guest additions are unavailable.
   #override.vm.synced_folder ".", "/vagrant", disabled: true

    # nic2 ... nicX
    nic_num.times.each { |i|
      ifindex = i + 2
      v.customize ["modifyvm", :id, "--nic#{ifindex}",   "intnet"]
      v.customize ["modifyvm", :id, "--intnet#{ifindex}", "bond#{i / 2}"]
    }
  end

  config.vm.provider :vmware_workstation do |v, override|
    override.vm.synced_folder ".", "/vagrant", disabled: true
   #v.gui = true

    # ethernet1 ... etehernetX
    nic_num.times.each { |i|
      ifindex = i + 1
      v.vmx["ethernet#{ifindex}.present"]        = "TRUE"
      v.vmx["ethernet#{ifindex}.vnet"]           = "VMnet1#{i / 2}"
      v.vmx["ethernet#{ifindex}.connectionType"] = "custom"
      v.vmx["ethernet#{ifindex}.virtualDev"]     = "e1000"
      v.vmx["ethernet#{ifindex}.wakeOnPcktRcv"]  = "FALSE"
      v.vmx["ethernet#{ifindex}.addressType"]    = "generated"
    }
  end

  config.vm.provision "shell", path: "bootstrap.sh"     # Bootstrapping: package installation (phase:1)
  config.vm.provision "shell", path: "config.d/base.sh" # Configuration: node-common          (phase:2)

  2.times.each { |i|
    name = sprintf("node%02d", i + 1)
    config.vm.define "#{name}" do |node|
      node.vm.hostname = "#{name}"
      node.vm.provision "shell", path: "config.d/#{node.vm.hostname}.sh" # Configuration: node-specific (phase:2.5)
    end
  }
end
